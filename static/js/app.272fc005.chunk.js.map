{"version":3,"sources":["App.js"],"names":["CatHungry","props","useState","isHungry","setIsHungry","style","styles","viewContainer","name","buttonContainer","title","onPress","disabled","TextOnChaning","text","setText","height","marginTop","borderWidth","borderColor","placeholder","onChangeText","defaultValue","textStyle","count","split","length","counter","Listing","App","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","padding","marginBottom","textAlign","fontSize","fontWeight"],"mappings":"kMAGMA,EAAY,SAACC,GAAW,IAAD,EACKC,oBAAS,GADd,WACpBC,EADoB,KACVC,EADU,KAE3B,OACE,kBAAC,IAAD,CAAMC,MAAOC,EAAOC,eAClB,kBAAC,IAAD,aAAYN,EAAMO,KAAlB,aAAkCL,EAAW,SAAW,SACxD,kBAAC,IAAD,CAAME,MAAOC,EAAOG,iBAClB,kBAAC,IAAD,CACEC,MAAOP,EAAW,mBAAqB,SACvCQ,QAAS,WAAQP,GAAY,IAC7BQ,UAAWT,IAEb,kBAAC,IAAD,CACEO,MAAOP,EAAW,WAAa,UAC/BQ,QAAS,WAAQP,GAAY,IAC7BQ,SAAUT,OAcdU,EAAgB,WAAO,IAAD,EACFX,mBAAS,IADP,WACnBY,EADmB,KACbC,EADa,KAE1B,OACE,kBAAC,IAAD,CAAMV,MAAOC,EAAOC,eAClB,kBAAC,IAAD,CACEF,MAAO,CAAEW,OAAQ,GAAIC,UAAW,GAAIC,YAAc,EAAGC,YAAY,SACjEC,YAAY,aACZC,aAAc,SAAAP,GAAI,OAAIC,EAAQD,IAC9BQ,aAAcR,IAGhB,kBAAC,IAAD,CACET,MAAOC,EAAOiB,WADhB,IAECT,GAED,kBAAC,IAAD,gBAtBU,SAACA,GACf,IAAIU,EAAQV,EAAKW,MAAM,KAAKC,OAAS,EACrC,OAAIF,EAAQ,IACHA,EACO,eAmBDG,CAAQb,MAMnBc,EAAU,WACd,OACE,oCACE,kBAAC5B,EAAD,CAAWQ,KAAK,SAChB,kBAACK,EAAD,QAMS,SAASgB,IACtB,OACE,kBAACD,EAAD,MAIJ,IAAMtB,EAASwB,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElB7B,cAAe,CACb0B,KAAM,EACNG,eAAgB,SAChBF,gBAAiB,UACjBG,QAAS,IAEX5B,gBAAiB,CACf6B,aAAc,GACdD,QAAS,IAEXd,UAAW,CACTN,UAAY,GACZsB,UAAW,SACXC,SAAW,GACXtB,YAAc,EACdC,YAAc,OACdkB,QAAS,GACTI,WAAa,W","file":"static/js/app.272fc005.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, StyleSheet, Text, TextInput, View } from 'react-native';\n\nconst CatHungry = (props) => {\n  const [isHungry, setIsHungry] = useState(true);\n  return (\n    <View style={styles.viewContainer}>\n      <Text>I am {props.name} and I am {isHungry ? \"hungry\" : \"full.\"}</Text>\n      <View style={styles.buttonContainer}>\n        <Button\n          title={isHungry ? \"Gimme Some Milk!\" : \"Thanks\"}\n          onPress={() => { setIsHungry(false) }}\n          disabled={!isHungry}\n        />\n        <Button\n          title={isHungry ? \"Disabled\" : \"Refresh\"}\n          onPress={() => { setIsHungry(true) }}\n          disabled={isHungry}\n        />\n      </View>\n    </View>\n  )\n}\n\nconst counter = (text) => {\n  let count = text.split(' ').length - 1\n  if (count < 100) {\n    return count\n  } else { return 'This is GOD!' }\n}\n\nconst TextOnChaning = () => {\n  const [text, setText] = useState('');\n  return (\n    <View style={styles.viewContainer}>\n      <TextInput\n        style={{ height: 45, marginTop: 30, borderWidth : 1, borderColor:'black' }}\n        placeholder='Type here.'\n        onChangeText={text => setText(text)}\n        defaultValue={text}\n      >\n      </TextInput>\n      <Text\n        style={styles.textStyle}> {}\n      {text}\n      </Text>\n      <Text>\n        Count : {counter(text)}\n      </Text>\n    </View>\n  )\n}\n\nconst Listing = () => {\n  return (\n    <>\n      <CatHungry name='PaTa' />\n      <TextOnChaning />\n    </>\n\n  )\n}\n\nexport default function App() {\n  return (\n    <Listing />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  viewContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#ECF0F1',\n    padding: 10\n  },\n  buttonContainer: {\n    marginBottom: 10,\n    padding: 10\n  },\n  textStyle: {\n    marginTop : 10,\n    textAlign: 'center',\n    fontSize : 15,\n    borderWidth : 1,\n    borderColor : 'cyan',\n    padding: 10,\n    fontWeight : 'bold'\n  }\n});\n"],"sourceRoot":""}